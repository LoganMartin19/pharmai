platform :ios, '16.0'

require_relative '../node_modules/react-native/scripts/react_native_pods'

use_frameworks! :linkage => :static

target 'PharmAI' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :fabric_enabled => false,
    :new_arch_enabled => false
  )

  # âœ… Fix gRPC/JSI-related linker issues
  pod 'gRPC-Core', :modular_headers => true
  pod 'gRPC-C++', :modular_headers => true
  pod 'gRPC', :modular_headers => true
  pod 'abseil', :modular_headers => true
  pod 'BoringSSL-GRPC', :modular_headers => true
  pod 'leveldb-library', :modular_headers => true

  target 'PharmAITests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(installer)

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # ðŸ§± General build settings
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'

        # ðŸ§© Fix missing system libraries
        config.build_settings['OTHER_LDFLAGS'] ||= '$(inherited)'
	ldflags = config.build_settings['OTHER_LDFLAGS']
	ldflags_array = ldflags.is_a?(String) ? [ldflags] : ldflags
	ldflags_array += ['-lc++', '-lc++abi', '-licucore', '-lz']
	config.build_settings['OTHER_LDFLAGS'] = ldflags_array	
      end

      # âœ… Fix for RNReanimated
      if target.name == 'RNReanimated'
        target.build_configurations.each do |config|
          config.build_settings['USE_HERMES'] = 'NO'
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
      end

      # âœ… Fix for RNScreens
      if target.name == 'RNScreens'
        target.build_configurations.each do |config|
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
      end
    end

    # ðŸ©¹ Optional fix: RCT-Folly `clockid_t` type redefinition
    folly_time = "Pods/RCT-Folly/folly/portability/Time.h"
    if File.exist?(folly_time)
      text = File.read(folly_time)
      patched = text.gsub(
        "typedef uint8_t clockid_t;",
        "#ifndef __clockid_t_defined\n#define __clockid_t_defined\ntypedef uint8_t clockid_t;\n#endif"
      )
      File.write(folly_time, patched)
    end
  end
end